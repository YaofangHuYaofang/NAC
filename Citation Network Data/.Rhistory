par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(3,3,3,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,0,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -1)
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,0,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = c(-1, 0, -1, 0))
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
dev.off()
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = c(-2, 0, -2,0))
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = c(-2, 0, -2,0))
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = c(-1, 0, -1,0))
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -1)
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.5)
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = 0)
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,0,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(1,0,1,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.4)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(-3,0,-3,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.3)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(3,0,3,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.3)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1.2, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.3, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,0,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.3)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.3, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,0,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.25)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.4, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,1,5,2)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(1, 0.8, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
dev.off()
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, 0.4, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, 0, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.5, y.intersp = 0.5)
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,1,5,2)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5, margin = -0.2)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,1,5,2)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(3,0,3,0)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,4,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(5,1,4,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 5, width = 7)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 4, width = 6)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.6, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 4, width = 6)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0.2, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.4, y.intersp = 0.5)
dev.off()
setEPS()
postscript("Citation.eps", height = 4, width = 6)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.4, y.intersp = 0.5)
dev.off()
print("Net-based method sizes:")
for(kk in 3:6){
est_net = Net_based_eig(Zeig, kk, startn = 50);
print(summary(as.factor(est_net)))
}
print("SCORE sizes:")
for(kk in 3:6){
est_score = SCOREeig(gianteig, kk, startn = 50);
print(summary(as.factor(est_score)))
}
est_net = Net_based_eig(Zeig, K = 5, startn = 50);
kk = 5
for(ii in 1:5){
allsize = summary(as.factor(method_matrix[,ii]))
print(colnames(nmi_matrix)[ii])
print(allsize)
giantsize = summary(as.factor(method_matrix[GiantLabel,ii]))
#  print(giantsize)
print(allsize - giantsize)
}
#Find the NMI matrix first
nmi_matrix = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix[i,j] = NMI(method_matrix[i,GiantLabel], method_matrix[j,GiantLabel])
}
i
j
length(method_matrix[i,])
length(method_matrix[,i])
nmi_matrix = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix[i,j] = NMI(method_matrix[,i], method_matrix[,j])
}
colnames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
rownames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
nmi_df <- as.data.frame(as.table(nmi_matrix))
heatmap_plot <- ggplot(nmi_df, aes(Var1, Var2, fill = Freq, label = ifelse(Freq != 0, round(Freq, 2), ""))) +
geom_tile() +
geom_text(color = "black", size = 2, vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
theme(legend.position = "none", # Change legend position to the right
legend.key.width = unit(0.5, "cm"), # Adjust the legend key width
legend.key.height = unit(2, "cm"),
legend.text = element_text(size = 5),
axis.title = element_blank(),
axis.text = element_text(size = 5)) +
theme()
heatmap_plot
#Find the NMI matrix first
nmi_matrix = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix[i,j] = NMI(method_matrix[i,], method_matrix[j,])
}
colnames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
rownames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
#Draw the heatmap of NMI
nmi_df <- as.data.frame(as.table(nmi_matrix))
heatmap_plot <- ggplot(nmi_df, aes(Var1, Var2, fill = Freq, label = ifelse(Freq != 0, round(Freq, 2), ""))) +
geom_tile() +
geom_text(color = "black", size = 2, vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
theme(legend.position = "none", # Change legend position to the right
legend.key.width = unit(0.5, "cm"), # Adjust the legend key width
legend.key.height = unit(2, "cm"),
legend.text = element_text(size = 5),
axis.title = element_blank(),
axis.text = element_text(size = 5)) +
theme()
#Find the NMI matrix first
nmi_matrix_giant = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix_giant[i,j] = NMI(method_matrix[GiantLabel,i], method_matrix[GiantLabel,j])
}
colnames(nmi_matrix_giant) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
rownames(nmi_matrix_giant) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
#Draw the heatmap of NMI
nmi_df_giant <- as.data.frame(as.table(nmi_matrix_giant))
heatmap_plot_giant <- ggplot(nmi_df_giant, aes(Var1, Var2, fill = Freq, label = ifelse(Freq != 0, round(Freq, 2), ""))) +
geom_tile() +
geom_text(color = "black", size = 2, vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
theme(legend.position = "none", # Change legend position to the right
legend.key.width = unit(0.5, "cm"), # Adjust the legend key width
legend.key.height = unit(2, "cm"),
legend.text = element_text(size = 5),
axis.title = element_blank(),
axis.text = element_text(size = 5)) +
theme()
arrangeGrob(heatmap_plot, heatmap_plot_giant, nrow = 1)
plot_grid(heatmap_plot, heatmap_plot_giant, nrow = 1)
ggsave(file = "NMI.pdf", height = 2, width = 4)
nmi_df
nmi_matrix
nmi_matrix_giant
nmi_matrix = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix[i,j] = NMI(method_matrix[,i], method_matrix[,j])
}
colnames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
rownames(nmi_matrix) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
#Draw the heatmap of NMI
nmi_df <- as.data.frame(as.table(nmi_matrix))
heatmap_plot <- ggplot(nmi_df, aes(Var1, Var2, fill = Freq, label = ifelse(Freq != 0, round(Freq, 2), ""))) +
geom_tile() +
geom_text(color = "black", size = 2, vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
theme(legend.position = "none", # Change legend position to the right
legend.key.width = unit(0.5, "cm"), # Adjust the legend key width
legend.key.height = unit(2, "cm"),
legend.text = element_text(size = 5),
axis.title = element_blank(),
axis.text = element_text(size = 5)) +
theme()
#Find the NMI matrix first
nmi_matrix_giant = matrix(0, nrow = 5, ncol = 5)
method_matrix = cbind(est_nac[3,], est_sdp, est_nagc[3,], est_casc, est_net);
for(i in 1:5){
for(j in 1:i)
nmi_matrix_giant[i,j] = NMI(method_matrix[GiantLabel,i], method_matrix[GiantLabel,j])
}
colnames(nmi_matrix_giant) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
rownames(nmi_matrix_giant) <- c("New", "SDP", "New(g)", "CAL", "Net-based")
#Draw the heatmap of NMI
nmi_df_giant <- as.data.frame(as.table(nmi_matrix_giant))
heatmap_plot_giant <- ggplot(nmi_df_giant, aes(Var1, Var2, fill = Freq, label = ifelse(Freq != 0, round(Freq, 2), ""))) +
geom_tile() +
geom_text(color = "black", size = 2, vjust = 1) +
scale_fill_gradient(low = "white", high = "blue") +
theme_minimal() +
theme(legend.position = "none", # Change legend position to the right
legend.key.width = unit(0.5, "cm"), # Adjust the legend key width
legend.key.height = unit(2, "cm"),
legend.text = element_text(size = 5),
axis.title = element_blank(),
axis.text = element_text(size = 5)) +
theme()
plot_grid(heatmap_plot, heatmap_plot_giant, nrow = 1)
ggsave(file = "NMI.pdf", height = 2, width = 4)
library(gridBase)
library(grid)
setEPS()
postscript("Citation.eps", height = 4, width = 6)
par(mfrow=c(1, 2),  mai = c(0.1, 0.1, 0, 0.1))
## the last one is the current plot
plot.new()              ## suggested by @Josh
vps <- baseViewports()
pushViewport(vps$figure) ##   I am in the space of the autocorrelation plot
vp1 <-plotViewport(c(4,1,5,1)) ## create new vp with margins, you play with this values
print(heatmap_plot_giant,vp = vp1)        ## suggested by @bpatiste
plot(graph1, layout = L, xlim = c(-1, 1), vertex.color = newlabel[est_nac[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
legendnames = c("Variable Selection \n (Regression)\n", "Large-Scale \n Multiple Testing", "Biostatistics",
"Bayesian\n", "Variable Selection \n (Semiparametric)\n");
legend(-1, -0.2, legend = legendnames, col = categorical_pal(kk), pch = 16,
cex = 0.4, y.intersp = 0.5)
dev.off()
heatmap_plot_giant
