errorall
apply(errorall, 2, min)
setwd("~/Dropbox/Network-Related/NewSimulation")
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = "Within-community Intensity - Between-community Intensity", ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(aseq, errorall[,6], type = "l", lty = ltyvec[1],
xlab = "Within-community Intensity - Between-community Intensity", ylab = "Error Rate", main = "(b) Low-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(aseq, errorall[, i+5], lty = ltyvec[i])
}
lines(aseq, errorall[, 4], lty = ltyvec[4])
lines(aseq, errorall[, 9], lty = ltyvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = "Covariates Signal Strength", ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(museq, errorall[,6], type = "l", lty = ltyvec[1],
xlab = "Covariates Signal Strength", ylab = "Error Rate", main = "(d) Low-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(museq, errorall[, i+5], lty = ltyvec[i])
}
lines(museq, errorall[, 4], lty = ltyvec[4])
lines(museq, errorall[, 9], lty = ltyvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = "1 - Misspecification Rate", ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1],
xlab = "1 - Misspecification Rate", ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
dev.off
dev.off()
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = "1 - Misspecification Rate", ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1],
xlab = "1 - Misspecification Rate", ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
errorall
prob1seq
34*(34-1)/2
34*(34-1)/2*0.144
81/34
pnorm(.5)
getwd()
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = expression("1 - Between-community Intensity", alpha), ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
ltyvec = 1:10; pchvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = expression(paste("1 - Between-community Intensity", alpha)), ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i])
}
dev.off()
ltyvec = 1:10; pchvec = 1:10; colvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1], col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[1])), ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i])
}
setEPS()                                             # Set postscript arguments
postscript("Simulation.eps", height = 6, width =4)
#pdf(file = "Simulation.pdf", height = 9, width =6)
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10; colvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1], col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(aseq, errorall[,6], type = "l", lty = ltyvec[1],col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(b) Low-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(aseq, errorall[, i+5], lty = ltyvec[i], col = colvec[i])
}
lines(aseq, errorall[, 4], lty = ltyvec[4], col = colvec[4])
lines(aseq, errorall[, 9], lty = ltyvec[5], col = colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[1])), ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(museq, errorall[,6], type = "l", lty = ltyvec[1],col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[2])), ylab = "Error Rate", main = "(d) Low-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(museq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(museq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(museq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i], col =colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
dev.off()
setEPS()                                             # Set postscript arguments
postscript("Simulation.eps", height = 12, width =8)
#pdf(file = "Simulation.pdf", height = 9, width =6)
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10; colvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1], col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(aseq, errorall[,6], type = "l", lty = ltyvec[1],col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(b) Low-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(aseq, errorall[, i+5], lty = ltyvec[i], col = colvec[i])
}
lines(aseq, errorall[, 4], lty = ltyvec[4], col = colvec[4])
lines(aseq, errorall[, 9], lty = ltyvec[5], col = colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[1])), ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(museq, errorall[,6], type = "l", lty = ltyvec[1],col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[2])), ylab = "Error Rate", main = "(d) Low-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(museq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(museq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(museq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i], col =colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
dev.off()
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10; colvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1], col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate",
main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(aseq, errorall[,6], type = "l", lty = ltyvec[1],col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(b) Low-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(aseq, errorall[, i+5], lty = ltyvec[i], col = colvec[i])
}
lines(aseq, errorall[, 4], lty = ltyvec[4], col = colvec[4])
lines(aseq, errorall[, 9], lty = ltyvec[5], col = colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[1])), ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(museq, errorall[,6], type = "l", lty = ltyvec[1],col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[2])), ylab = "Error Rate", main = "(d) Low-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(museq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(museq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(museq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i], col =colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
###### Plot Section ############
#no color, no points
setEPS()                                             # Set postscript arguments
postscript("Simulation.eps", height = 7.5, width =5)
#pdf(file = "Simulation.pdf", height = 9, width =6)
par(mfrow = c(3,2))
load("Simulation Results/Exp1.Rdata")
ltyvec = 1:10; pchvec = 1:10; colvec = 1:10;
plot(aseq, errorall[,1], type = "l", lty = ltyvec[1], col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate",
main = "(a) High-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:5){
lines(aseq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(aseq, errorall[,6], type = "l", lty = ltyvec[1],col = colvec[1],
xlab = expression(paste("1 - Between-community Intensity ", alpha)), ylab = "Error Rate", main = "(b) Low-dim covariates, varying graph", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:3){
lines(aseq, errorall[, i+5], lty = ltyvec[i], col = colvec[i])
}
lines(aseq, errorall[, 4], lty = ltyvec[4], col = colvec[4])
lines(aseq, errorall[, 9], lty = ltyvec[5], col = colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp2.Rdata")
colvec = 1:10; pchvec = 1:10; ltyvec = 1:10;
plot(museq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[1])), ylab = "Error Rate", main = "(c) High-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:5){
lines(museq, errorall[, i], lty = ltyvec[i], col = colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
plot(museq, errorall[,6], type = "l", lty = ltyvec[1],col =colvec[1],
xlab = expression(paste("Covariates Signal Strength ", mu[2])), ylab = "Error Rate", main = "(d) Low-dim covariates, varying covariates", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:3){
lines(museq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(museq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(museq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
load("Simulation Results/Exp3.Rdata")
colvec = 1:10; pchvec = 1:10;
plot(prob1seq, errorall[,1], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(e) High-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:5){
lines(prob1seq, errorall[, i], lty = ltyvec[i], col =colvec[i])
}
#legend("topright", legend = c("CASCORE", "CASC", "SDP"), lty = 1:3, cex = 0.5)
plot(prob1seq, errorall[,6], type = "l", lty = ltyvec[1], col =colvec[1],
xlab = expression(paste("1 - Mis-specification Rate ", gamma)), ylab = "Error Rate", main = "(f) Low-dim covariates, mis-specification", ylim = c(0, 0.7),
cex.lab = 1, cex.main = 1)
for(i in 2:3){
lines(prob1seq, errorall[, i+5], lty = ltyvec[i], col =colvec[i])
}
lines(prob1seq, errorall[, 4], lty = ltyvec[4], col =colvec[4])
lines(prob1seq, errorall[, 9], lty = ltyvec[5], col =colvec[5])
#legend("topright", legend = c("CASCORE", "CASC", "SDP", "Net-based", "Cov-based"), lty = 1:5, cex = 0.5)
dev.off()
load("/Users/staww/Documents/CASCORE-github/Citation Network Data/Citation.Rdata")
setEPS()
postscript("Citation.eps", height = 3, width =6)
par(mfrow = c(1,1), mai = c(0.1, 0.1, 0.2, 0.1))
kk = 5;
csize = summary(as.factor(est_cascore[kk-2,]));
newlabel = rank(csize)
plot(graph1, layout = L, xlim = c(-1, 2), vertex.color = newlabel[est_cascore[kk - 2, newind]], vertex.label = NA,
vertex.size = 5)
